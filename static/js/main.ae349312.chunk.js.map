{"version":3,"sources":["components/common/Navbar.js","components/common/Footer.js","constants.js","components/home/Landing.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","useState","navStyle","setStyle","window","addEventListener","scrollY","className","Footer","href","aria-label","target","rel","DEFAULT_URL","Landing","results","setResults","status","setStatus","emptyForm","title","essay","form","setForm","changeForm","e","name","value","type","required","onChange","readOnly","placeholder","rows","Results","Actions","postEssay","endpoint","postData","a","async","contentType","data","JSON","stringify","url","startsWith","headers","Promise","resolve","reject","fetch","method","body","then","response","responseOk","ok","json","catch","error","console","log","post","res","scores","resetEssay","content","onClick","currentResult","setCurrentResult","length","categories","map","i","key","algorithm","cat","style","width","score","ReactGA","initialize","pageview","location","pathname","search","history","createBrowserHistory","listen","App","Helmet","defaultTitle","titleTemplate","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae349312.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './navbar.scss';\n\n\nexport default function Navbar() {\n\n    const [navStyle, setStyle] = useState(\"dark\");\n    const scrollFunction = () => {\n        if (window.scrollY > 20) {\n            setStyle(\"normal\");\n        } else {\n            setStyle(\"dark\");\n        }\n    }\n\n\n    window.addEventListener('scroll', scrollFunction);\n    return (\n        <>\n        <div className={`navbar ${navStyle}`}>\n            <h2>AutoRedação</h2>\n        </div>\n        <div className=\"navbar-spacer\">\n        </div>\n\n        </>\n    )\n\n}","import React from 'react';\nimport {FiInstagram, FiFacebook, FiTwitter, FiYoutube, FiPhone} from 'react-icons/fi'\nimport './footer.scss'\n\nexport default function Footer() {\n\n    return (\n        <footer>\n            <div className=\"container\">\n                <div className=\"social-icons\">\n                    <a href=\"#\" aria-label=\"Instagram\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <FiInstagram/>\n                    </a>\n                    <a href=\"#\" aria-label=\"Facebook\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <FiFacebook/>\n                    </a>\n\n                    <a href=\"#\" aria-label=\"Twitter\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <FiTwitter/>\n                    </a>\n\n                    <a href=\"#\" aria-label=\"Youtube\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <FiYoutube/>\n                    </a>\n                \n                    <a href=\"#\" aria-label=\"Whatsapp\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <FiPhone/>\n                    </a>    \n                </div>\n            </div>\n        </footer>\n    )\n}","let DEFAULT_URL = \"\"\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    DEFAULT_URL = `http://localhost:8000`;\n} else {\n    DEFAULT_URL = \"http://livox-1492702205991.appspot.com\";\n}\n\nexport const post = async (endpoint, postData, contentType = \"application/json\") => {\n\n    let data = postData;\n    let responseOk;\n    if (contentType === \"application/json\") {\n      data = JSON.stringify(postData)\n    }\n  \n    let url = DEFAULT_URL + endpoint\n    if (endpoint.startsWith('http://') || endpoint.startsWith('https://')) {\n      url = endpoint;\n    }\n  \n    let headers = {\n      'Content-Type': contentType,\n    }\n  \n    return new Promise((resolve, reject) => {\n      fetch(url, {\n        method: \"POST\",\n        headers: headers,\n        body: data\n      }).then(function (response) {\n        responseOk = response.ok;\n        return response.json();\n      }).then(function (json) {\n        if (responseOk) {\n          resolve(json);\n        } else {\n          reject(json);\n        }\n      }).catch(function (error) {\n        console.log(\"Unexpected error\" + error)\n        reject(error)\n      });\n    });\n  \n  }\n  ","import React, { useState } from 'react';\nimport './landing.scss';\nimport { post } from 'constants.js';\n\nexport default function Landing() {\n\n\n  const [results, setResults] = useState([])\n\n  // Can be \"writing\", \"revising\", \"evaluated\"\n  const [status, setStatus] = useState(\"writing\")\n\n  const emptyForm = {\n    title: \"\",\n    essay: \"\",\n  };\n\n  const [form, setForm] = useState(emptyForm)\n  const changeForm = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value })\n  }\n\n  const postEssay = (e) => {\n    post(\"/\", form).then(res => setResults(res.scores))\n    setStatus(\"evaluated\");\n  }\n\n  const resetEssay = (e) => {\n    setForm(emptyForm);\n    setStatus(\"writing\");\n  }\n\n  return (\n    <div className=\"essay-container\">\n\n      <div className=\"essay\">\n        <div className={`form ${status}`}>\n          <div className=\"title\" >\n            <input type=\"text\" name=\"title\" required onChange={changeForm} value={form.title} readOnly={status !== \"writing\"} placeholder=\"Escreva aqui seu titulo\" />\n          </div>\n          <div className=\"content\">\n            <textarea name=\"essay\" required onChange={changeForm} value={form.essay} readOnly={status !== \"writing\"} rows=\"25\" />\n          </div>\n        </div>\n        <Results status={status} results={results} />\n      </div>\n\n      <Actions status={status} postEssay={postEssay} setStatus={setStatus} resetEssay={resetEssay} />\n    </div>\n  );\n}\n\nfunction Actions({ status, postEssay, setStatus, resetEssay }) {\n\n  let content = \"\";\n\n  if (status === \"writing\") {\n    content = (\n      <>\n        <button onClick={() => setStatus(\"revising\")}>\n          Revisar\n        </button>\n        <button className=\"action\" onClick={postEssay}>\n          Avaliar\n        </button>\n      </>\n    )\n  } else if (status === \"revising\") {\n    content = (\n      <>\n        <button onClick={() => setStatus(\"writing\")}>\n          Editar\n        </button>\n        <button className=\"action\" onClick={postEssay}>\n          Avaliar\n        </button>\n      </>\n    )\n  } else {\n    content = (\n      <>\n        <button className=\"action\" onClick={resetEssay}>\n          Nova redação\n        </button>\n      </>\n    )\n  }\n\n  return (\n    <div className=\"actions\">\n      {content}\n    </div>\n  )\n\n}\n\nfunction Results({ results, status }) {\n  const [currentResult, setCurrentResult] = useState(0);\n\n  if (results.length === 0) return null;\n  if (status !== \"evaluated\") return null;\n\n  const categories = [\n    \"Escrita formal\",\n    \"Compreensão do tema\",\n    \"Defesa do ponto de vista\",\n    \"Argumentação\",\n    \"Proposta de intervenção\"\n  ]\n\n  return (\n    <div className=\"evaluation\">\n      <select\n        onChange={(e) => setCurrentResult(results[e.target.value])}>\n        {\n          results.map((res, i) => (\n            <option key={res.algorithm} value={i}>{res.algorithm}</option>\n          ))\n        }\n      </select>\n      <h3>\n        Avaliação\n      </h3>\n      <ul>\n        {categories.map((cat, i) => (\n          <li className=\"category\" key={cat}>\n            <div className=\"main\">\n              <span className=\"title\">\n                {categories[i]}\n              </span>\n              <span className=\"score-badge\">\n                {currentResult[`category_${i + 1}`] || \"ND\"}\n              </span>\n            </div>\n            <div className=\"bar-container\">\n              <div className=\"bar\" style={{ width: currentResult[`category_${i + 1}`] * 0.5 + \"%\" }}></div>\n            </div>\n          </li>\n        ))}\n      </ul>\n      <hr />\n      <div className=\"total\">\n        Nota final\n        <br />\n        <div className=\"score\">\n          <span>{(currentResult && currentResult.score) || results[0].score} </span> / 10\n          </div>\n      </div>\n\n    </div>\n  )\n\n}\n\n","import React from 'react';\nimport './App.scss';\nimport Navbar from 'components/common/Navbar';\nimport Footer from 'components/common/Footer';\nimport { Router, Route, Switch} from \"react-router-dom\";\nimport Landing from './components/home/Landing';\nimport {Helmet} from \"react-helmet\";\nimport ReactGA from 'react-ga';\nimport { createBrowserHistory } from 'history';\n\nReactGA.initialize('UA-59915754-2');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nconst history = createBrowserHistory();\nhistory.listen((location) => {\n  ReactGA.pageview(location.pathname);\n});\n\nfunction App() {\n\n  return (\n    <div>\n      <Router history={history}>\n        <Helmet\n              defaultTitle={'AutoRedação'}\n              titleTemplate={`%s - ${'AutoRedação'}`}\n        />\n        <Navbar/>\n        <Switch>\n          <Route component={Landing} />\n        </Switch>\n        <Footer/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}